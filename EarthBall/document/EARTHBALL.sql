DROP TABLE STORE;
DROP TABLE PRODUCT;
DROP TABLE PAYMENT;
DROP TABLE TB_CATEGORY;
DROP TABLE NOTICE;
DROP TABLE QNA;
DROP TABLE MEMBER;
DROP TABLE TB_CODE;
DROP TABLE TB_CHA_FILE;
DROP TABLE MESSAGE;
DROP TABLE TB_CH_CONFIRM;
DROP TABLE TB_CH_DETAIL_INFO;
DROP TABLE LIKES;
DROP TABLE REPORT;
DROP TABLE FAQ;
DROP TABLE STORE_ATTA;
DROP TABLE PRODUCT_ATTA;
DROP TABLE DY_BOARD;
DROP TABLE CHAT;
DROP TABLE GRADE;
DROP TABLE DY_REPLY;
DROP TABLE TB_CH_CON_REPLY;
DROP TABLE REVIEW;
DROP TABLE REVIEW_REPLY;
DROP TABLE ORDERS;
DROP TABLE POINT;
DROP TABLE CART;
DROP TABLE TB_CHALLENGE;
DROP TABLE TB_GRP_CODE;
DROP TABLE TB_CATEGORY_TEMPLATE;

DROP SEQUENCE SEQ_TB_CHALLENGE;
DROP SEQUENCE SEQ_STORE;
DROP SEQUENCE SEQ_PRODUCT;
DROP SEQUENCE SEQ_PAYMENT;
DROP SEQUENCE SEQ_TB_CATEGORY;
DROP SEQUENCE SEQ_NOTICE;
DROP SEQUENCE SEQ_TB_CATEGORY_TEMPLATE;
DROP SEQUENCE SEQ_QNA;
DROP SEQUENCE SEQ_MEMBER;
DROP SEQUENCE SEQ_TB_GRP_CODE;
DROP SEQUENCE SEQ_TB_CODE;
DROP SEQUENCE SEQ_TB_CHA_FILE;
DROP SEQUENCE SEQ_MESSAGE;
DROP SEQUENCE SEQ_TB_CH_CONFIRM;
DROP SEQUENCE SEQ_TB_CH_DETAIL_INFO;
DROP SEQUENCE SEQ_LIKE;
DROP SEQUENCE SEQ_REPORT;
DROP SEQUENCE SEQ_FAQ;
DROP SEQUENCE SEQ_STORE_ATTA;
DROP SEQUENCE SEQ_PRODUCT_ATTA;
DROP SEQUENCE SEQ_DY_BOARD;
DROP SEQUENCE SEQ_CHAT;
DROP SEQUENCE SEQ_GRADE;
DROP SEQUENCE SEQ_DY_REPLY;
DROP SEQUENCE SEQ_TB_CH_CON_REPLY;
DROP SEQUENCE SEQ_REVIEW;
DROP SEQUENCE SEQ_REVIEW_REPLY;
DROP SEQUENCE SEQ_ORDER;
DROP SEQUENCE SEQ_POINT;
DROP SEQUENCE SEQ_CART;


CREATE TABLE TB_CHALLENGE (
	CH_NO NUMBER NOT NULL,
	CH_TITLE VARCHAR2(100) NOT NULL,
	CH_START_DAY VARCHAR2(8) NOT NULL,
	CH_END_DAY VARCHAR2(8) NOT NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL,
	CATEGORY_NO NUMBER NOT NULL,
	FILE_NO NUMBER NOT NULL,
	CODE VARCHAR2(8) NOT NULL
);

CREATE SEQUENCE SEQ_TB_CHALLENGE;

CREATE TABLE STORE (
	STORE_NO NUMBER NOT NULL,
	STORE_NAME VARCHAR2(50) NOT NULL,
	STORE_ADDRESS VARCHAR2(200) NOT NULL,
	STORE_PHONE VARCHAR2(30) NULL,
	BUSINESS_HOURS VARCHAR2(20) NULL,
	STORE_RC NUMBER	DEFAULT 0 NOT NULL,
	STORE_LAT NUMBER NULL,
	STORE_LON NUMBER NULL
);

CREATE SEQUENCE SEQ_STORE;

CREATE TABLE PRODUCT (
	PRODUCT_NO NUMBER NOT NULL,
	PRODUCT_NAME VARCHAR2(50) NOT NULL,
	CATEGORY VARCHAR2(20) NOT NULL,
	PRICE NUMBER NOT NULL,
	DISCOUNT NUMBER	DEFAULT 0 NOT NULL,
	STOCK NUMBER DEFAULT 0 NOT NULL,
	CREATE_DATE	DATE DEFAULT SYSDATE NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_PRODUCT;

CREATE TABLE PAYMENT (
	PAYMENT_NO NUMBER NOT NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL,
	PAYMENT_DATE DATE DEFAULT SYSDATE NULL,
	PAYMENT_TYPE VARCHAR2(20) NOT NULL,
	STATUS VARCHAR2(1) NOT NULL,
	PAYMENT_TOTAL NUMBER NOT NULL,
	RECEIVE_NAME VARCHAR2(20) NOT NULL,
	RECEIVE_PHONE VARCHAR2(11) NOT NULL,
	POST_CODE NUMBER NOT NULL,
	RECEIVE_ADDRESS	VARCHAR2(100) NOT NULL,
	RECEIVE_DETAIL_ADDRESS VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_PAYMENT;

CREATE TABLE TB_CATEGORY (
	CATEGORY_NO	NUMBER NOT NULL,
	CATEGORY_NAME VARCHAR2(100) NOT NULL,
	STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_TB_CATEGORY;

CREATE TABLE NOTICE (
	NOTICE_NO NUMBER NOT NULL,
	NOTICE_TITLE VARCHAR2(100) NOT NULL,
	NOTICE_CONTENT VARCHAR2(500) NOT NULL,
	CREATED_AT DATE	DEFAULT SYSDATE	NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
	NOTICE_CATEGORY	VARCHAR2(15) NOT NULL,
	NOTICE_VIEW	NUMBER DEFAULT 0 NOT NULL
);

CREATE SEQUENCE SEQ_NOTICE;

CREATE TABLE TB_CATEGORY_TEMPLATE (
	CATEGORY_TEMPLATE_NO NUMBER NOT NULL,
	INPUT_TYPE VARCHAR2(20) NOT NULL,
	STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
	SORT_NO	NUMBER NOT NULL,
	CH_SUB_TITLE VARCHAR2(200) NULL,
	GRP_CODE VARCHAR2(8) NOT NULL,
	CATEGORY_NO	NUMBER NOT NULL
);

CREATE SEQUENCE SEQ_TB_CATEGORY_TEMPLATE;

CREATE TABLE QNA (
	BOARD_NO NUMBER NOT NULL,
	BOARD_TITLE	VARCHAR2(100) NOT NULL,
	BOARD_CONTENT VARCHAR(2000) NOT NULL,
	BOARD_DATE DATE	DEFAULT SYSDATE	NOT NULL,
	BOARD_REPLY	VARCHAR(1000) NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_QNA;

CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR2(100) NOT NULL,
	MEMBER_PWD VARCHAR2(100) NOT NULL,
	MEMBER_NAME	VARCHAR2(20) NOT NULL,
	EMAIL VARCHAR2(30) NOT NULL,
	BIRTH_DATE DATE NULL,
	PHONE CHAR(11) NOT NULL,
	GENDER CHAR(1) NULL,
	CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
	TOTAL_PAY NUMBER DEFAULT 0 NOT NULL,
	ADDRESS1 VARCHAR2(255) NULL,
	ADDRESS2 VARCHAR2(255) NULL,
	CHANGE_NAME	VARCHAR2(255) NULL,
	GRADE_NAME VARCHAR2(15)	DEFAULT 'RED' NOT NULL
);

CREATE SEQUENCE SEQ_MEMBER;

CREATE TABLE TB_GRP_CODE (
	GRP_CODE VARCHAR2(8) NOT NULL,
	GRP_CODE_NAME VARCHAR2(100) NOT NULL,
	STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_TB_GRP_CODE;

CREATE TABLE TB_CODE (
	CODE VARCHAR2(8) NOT NULL,
	GRP_CODE VARCHAR2(8) NOT NULL,
	CODE_NAME VARCHAR2(100) NOT NULL,
	STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
	SORT_NO	NUMBER NOT NULL
);

CREATE SEQUENCE SEQ_TB_CODE;

CREATE TABLE TB_CHA_FILE (
	FILE_NO	NUMBER NOT NULL,
	FILE_NAME VARCHAR2(100) NOT NULL,
	FILE_PATH VARCHAR2(300) NOT NULL
);

CREATE SEQUENCE SEQ_TB_CHA_FILE;

CREATE TABLE MESSAGE (
	MESSAGE_NO NUMBER NOT NULL,
	SEND_TIME DATE DEFAULT SYSDATE NOT NULL,
	MESSAGE_CONTENT	VARCHAR(1000) NOT NULL,
	CH_NO NUMBER NOT NULL,
	CATEGORY_NO	NUMBER NOT NULL
);

CREATE SEQUENCE SEQ_MESSAGE;

CREATE TABLE TB_CH_CONFIRM (
	CH_CON_NO NUMBER NOT NULL,
	CH_NO NUMBER NOT NULL,
	CH_CON_TITLE VARCHAR2(200) NOT NULL,
	CH_CON_CONTENT VARCHAR2(4000) NOT NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL,
	STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
	CH_CON_CREATE_DATE DATE	DEFAULT SYSDATE	NOT NULL
);

CREATE SEQUENCE SEQ_TB_CH_CONFIRM;

CREATE TABLE TB_CH_DETAIL_INFO (
	CH_DETAIL_INFO_NO NUMBER NOT NULL,
	CH_NO NUMBER NOT NULL,
	CATEGORY_TEMPLATE_NO NUMBER NOT NULL,
	CH_DETAIL_INFO_DATA	VARCHAR2(4000) NOT NULL,
	STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
	CODE VARCHAR2(8) NOT NULL,
	FILE_NO	NUMBER NOT NULL
);

CREATE SEQUENCE SEQ_TB_CH_DETAIL_INFO;

CREATE TABLE LIKES (
	MEMBER_ID VARCHAR2(100) NOT NULL,
	PRODUCT_NO NUMBER NOT NULL
);

CREATE SEQUENCE SEQ_LIKE;

CREATE TABLE REPORT (
	REPORT_NO NUMBER NOT NULL,
	REPORT_CONTENT VARCHAR2(3000) NOT NULL,
	CH_CON_NO NUMBER NOT NULL,
	CH_NO NUMBER NOT NULL,
	DY_BOARD_NO	NUMBER NOT NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_REPORT;

CREATE TABLE FAQ (
	FAQ_NO NUMBER NOT NULL,
	FAQ_QUESTION VARCHAR2(100) NOT NULL,
	FAQ_ANSWER VARCHAR(2000) NOT NULL,
	FAQ_CATEGORY VARCHAR(50) NOT NULL
);

CREATE SEQUENCE SEQ_FAQ;

CREATE TABLE STORE_ATTA (
	FILE_NO	NUMBER NOT NULL,
	FILE_NAME VARCHAR2(100) NOT NULL,
	FILE_PATH VARCHAR2(300) NOT NULL,
	STORE_NO NUMBER NOT NULL
);

CREATE SEQUENCE SEQ_STORE_ATTA;

CREATE TABLE PRODUCT_ATTA (
	ATTACHMENT_NO NUMBER NOT NULL,
	CHANGER_NAME VARCHAR2(255) NOT NULL,
	FILE_LEVEL CHAR(1) NOT NULL,
	PRODUCT_NO NUMBER NOT NULL
); 

CREATE SEQUENCE SEQ_PRODUCT_ATTA;

CREATE TABLE DY_BOARD (
	DY_BOARD_NO	NUMBER NOT NULL,
	DY_BOARD_TITLE VARCHAR2(100) NOT NULL,
	DY_BOARD_CONTENT VARCHAR2(4000) NOT NULL,
	DY_CREATE_DATE DATE DEFAULT SYSDATE	NULL,
	DY_STATUS VARCHAR2(1)	DEFAULT 'Y' NULL,
	DY_COUNT NUMBER DEFAULT 0 NULL,
	ORIGIN_NAME	VARCHAR2(100) NOT NULL,
	CHANGE_NAME	VARCHAR2(100) NOT NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_DY_BOARD;

CREATE TABLE CHAT (
	CH_NO NUMBER NOT NULL,
	CREATE_DATE	DATE NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_CHAT;

CREATE TABLE GRADE (
	GRADE_NAME VARCHAR2(15) DEFAULT 'RED' NOT NULL,
	PAYMENT_MIN	NUMBER NOT NULL,
	PAYMENT_MAX	NUMBER NOT NULL
);

CREATE SEQUENCE SEQ_GRADE;

CREATE TABLE DY_REPLY (
	DY_REPLY_NO	NUMBER NOT NULL,
	DY_BOARD_NO	NUMBER NOT NULL,
	DY_REPLY_CONTENT VARCHAR2(400) NOT NULL,
	DY_CREATE_DATE DATE DEFAULT SYSDATE	NOT NULL,
	DY_STATUS VARCHAR2(1) DEFAULT 'Y' NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_DY_REPLY;

CREATE TABLE TB_CH_CON_REPLY (
	RE_NO NUMBER NOT NULL,
	CH_CON_NO NUMBER NOT NULL,
	CH_NO NUMBER NOT NULL,
	RE_CONTENT VARCHAR2(2000) NOT NULL,
	RE_CREATE_DATE DATE DEFAULT SYSDATE	NOT NULL,
	STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_TB_CH_CON_REPLY;

CREATE TABLE REVIEW (
	REVIEW_NO NUMBER NOT NULL,
	REVIEW_CONTENT VARCHAR2(1000) NOT NULL,
	CREATE_DATE	DATE DEFAULT SYSDATE NOT NULL,
	RATING NUMBER NOT NULL,
	CHANGE_NAME	VARCHAR2(255) NULL,
	PRODUCT_NO NUMBER NOT NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_REVIEW;

CREATE TABLE REVIEW_REPLY (
	RV_REPLY_NO	NUMBER NOT NULL,
	REPLY_CONTENT VARCHAR2(1000) NOT NULL,
	CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
	REVIEW_NO NUMBER NOT NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_REVIEW_REPLY;

CREATE TABLE ORDERS (
	ORDER_NO NUMBER NOT NULL,
	PRODUCT_AMOUNT NUMBER DEFAULT 1 NOT NULL,
	PAYMENT_NO NUMBER NOT NULL,
	PRODUCT_NO NUMBER NOT NULL
);

CREATE SEQUENCE SEQ_ORDER;

CREATE TABLE POINT (
	POINT_NO NUMBER NOT NULL,
	POINT_CONTENT VARCHAR2(300) NOT NULL,
	POINT_NUM NUMBER NOT NULL,
	STATUS CHAR(3) NOT NULL,
	POINT_DATE DATE DEFAULT SYSDATE	NOT NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_POINT;

CREATE TABLE CART (
	CART_NO	NUMBER NOT NULL,
	AMOUNT NUMBER NOT NULL,
	PRICE NUMBER NOT NULL,
	PRODUCT_NO NUMBER NOT NULL,
	MEMBER_ID VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE SEQ_CART;



ALTER TABLE TB_CHALLENGE 
ADD CONSTRAINT PK_TB_CHALLENGE PRIMARY KEY (CH_NO);

ALTER TABLE STORE 
ADD CONSTRAINT PK_STORE PRIMARY KEY (STORE_NO);

ALTER TABLE PRODUCT 
ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (PRODUCT_NO);

ALTER TABLE PAYMENT 
ADD CONSTRAINT PK_PAYMENT PRIMARY KEY (PAYMENT_NO);

ALTER TABLE TB_CATEGORY 
ADD CONSTRAINT PK_TB_CATEGORY PRIMARY KEY (CATEGORY_NO);

ALTER TABLE NOTICE 
ADD CONSTRAINT PK_NOTICE PRIMARY KEY (NOTICE_NO);

ALTER TABLE TB_CATEGORY_TEMPLATE 
ADD CONSTRAINT PK_TB_CATEGORY_TEMPLATE PRIMARY KEY (CATEGORY_TEMPLATE_NO);

ALTER TABLE QNA 
ADD CONSTRAINT PK_QNA PRIMARY KEY (BOARD_NO);

ALTER TABLE MEMBER 
ADD CONSTRAINT PK_MEMBER PRIMARY KEY (MEMBER_ID);

ALTER TABLE TB_GRP_CODE 
ADD CONSTRAINT PK_TB_GRP_CODE PRIMARY KEY (GRP_CODE);

ALTER TABLE TB_CODE
ADD CONSTRAINT PK_TB_CODE PRIMARY KEY (CODE, GRP_CODE);

ALTER TABLE TB_CHA_FILE 
ADD CONSTRAINT PK_TB_CHA_FILE PRIMARY KEY (FILE_NO);

ALTER TABLE MESSAGE 
ADD CONSTRAINT PK_MESSAGE PRIMARY KEY (MESSAGE_NO);

ALTER TABLE TB_CH_CONFIRM 
ADD CONSTRAINT PK_TB_CH_CONFIRM PRIMARY KEY (CH_CON_NO, CH_NO);

ALTER TABLE TB_CH_DETAIL_INFO 
ADD CONSTRAINT PK_TB_CH_DETAIL_INFO PRIMARY KEY (CH_DETAIL_INFO_NO, CH_NO, CATEGORY_TEMPLATE_NO);

ALTER TABLE REPORT
ADD CONSTRAINT PK_REPORT PRIMARY KEY (REPORT_NO);

ALTER TABLE FAQ 
ADD CONSTRAINT PK_FAQ PRIMARY KEY (FAQ_NO);

ALTER TABLE STORE_ATTA 
ADD CONSTRAINT PK_STORE_ATTA PRIMARY KEY (FILE_NO);

ALTER TABLE PRODUCT_ATTA 
ADD CONSTRAINT PK_PRODUCT_ATTA PRIMARY KEY (ATTACHMENT_NO);

ALTER TABLE DY_BOARD 
ADD CONSTRAINT PK_DY_BOARD PRIMARY KEY (DY_BOARD_NO);

ALTER TABLE CHAT 
ADD CONSTRAINT PK_CHAT PRIMARY KEY (CH_NO);

ALTER TABLE GRADE 
ADD CONSTRAINT PK_GRADE PRIMARY KEY (GRADE_NAME);

ALTER TABLE DY_REPLY 
ADD CONSTRAINT PK_DY_REPLY PRIMARY KEY (DY_REPLY_NO);

ALTER TABLE TB_CH_CON_REPLY 
ADD CONSTRAINT PK_TB_CH_CON_REPLY PRIMARY KEY (RE_NO, CH_CON_NO, CH_NO);

ALTER TABLE REVIEW 
ADD CONSTRAINT PK_REVIEW PRIMARY KEY (REVIEW_NO);

ALTER TABLE REVIEW_REPLY 
ADD CONSTRAINT PK_REVIEW_REPLY PRIMARY KEY (RV_REPLY_NO);

ALTER TABLE ORDERS 
ADD CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_NO);

ALTER TABLE POINT
ADD CONSTRAINT PK_POINT PRIMARY KEY (POINT_NO);

ALTER TABLE CART 
ADD CONSTRAINT PK_CART PRIMARY KEY (CART_NO);



ALTER TABLE TB_CODE 
ADD CONSTRAINT FK_TB_GRP_CODE FOREIGN KEY (GRP_CODE)
REFERENCES TB_GRP_CODE (GRP_CODE);

ALTER TABLE TB_CH_CONFIRM 
ADD CONSTRAINT FK_TB_CHALLENGE FOREIGN KEY (CH_NO)
REFERENCES TB_CHALLENGE (CH_NO);

ALTER TABLE TB_CH_DETAIL_INFO 
ADD CONSTRAINT FK_TB_CHALLENGE2 FOREIGN KEY (CH_NO)
REFERENCES TB_CHALLENGE (CH_NO);

ALTER TABLE TB_CH_DETAIL_INFO 
ADD CONSTRAINT FK_TB_CATEGORY_TEMPLATE FOREIGN KEY (CATEGORY_TEMPLATE_NO)
REFERENCES TB_CATEGORY_TEMPLATE (CATEGORY_TEMPLATE_NO);

ALTER TABLE CHAT ADD CONSTRAINT FK_TB_CHALLENGE3 FOREIGN KEY (CH_NO)
REFERENCES TB_CHALLENGE (CH_NO);

ALTER TABLE TB_CH_CON_REPLY 
ADD CONSTRAINT FK_TB_CH_CONFIRM1 FOREIGN KEY (CH_CON_NO, CH_NO)
REFERENCES TB_CH_CONFIRM (CH_CON_NO, CH_NO);



